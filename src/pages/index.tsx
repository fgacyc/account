/* eslint-disable @next/next/no-img-element */
import request from "graphql-request";
import { useQuery } from "@tanstack/react-query";
import { Collapse } from "@/components/Button/Collapse";
import { useTheme } from "@/stores/useTheme";
import { type GetStaticProps } from "next";
import { useTranslations } from "next-intl";
import Head from "next/head";
// import Link from "next/link";
import { graphql } from "@/gql";
import { env } from "@/env";
import { PiMoon, PiSun } from "react-icons/pi";
import { useState } from "react";
import { Drawer } from "@/components/Drawer";
import { IoMenu } from "react-icons/io5";

const GET_USERS = graphql(`
  query GetUsers {
    userCollection {
      edges {
        node {
          id
        }
      }
    }
  }
`);

export default function Home() {
  const { theme, setTheme } = useTheme();
  const t = useTranslations();
  const [drawerOpen, setDrawerOpen] = useState(false);

  const { data, error, isLoading } = useQuery({
    queryKey: ["ministry"],
    queryFn: async () => request(env.NEXT_PUBLIC_GRAPHQL, GET_USERS),
  });
  console.log(data);
  if (isLoading) return <p>Loading...</p>;
  if (error) return <p>Error: {error.message}</p>;

  return (
    <>
      <Head>
        <title>Accounts Centre | FGACYC</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-[#f1f2f4] dark:bg-[#241F20] lg:px-10 lg:py-8">
        <Drawer open={drawerOpen} onClose={() => setDrawerOpen(false)} />
        <div className="relative flex w-full flex-grow flex-row justify-between overflow-hidden bg-white shadow-xl dark:bg-[#505050] lg:rounded-xl">
          <button
            onClick={() => setDrawerOpen((state) => !state)}
            className="absolute left-4 top-4 rounded-xl bg-black p-2.5 dark:bg-[#00EDC2]"
          >
            <IoMenu
              size={20}
              className="text-white opacity-100 dark:text-black"
            />
          </button>
          <div className="relative hidden w-full max-w-[320px] flex-grow flex-col justify-between bg-[#3b3b3b] p-5 dark:bg-[#00EDC2] lg:flex">
            <div className="flex flex-row items-center gap-2">
              <img
                src="/favicon.ico"
                className="h-[40px] w-[40px]"
                alt="fga logo"
              />
              <div className="font-sf text-[22px] font-[800] leading-[22px] text-white dark:text-black">
                {t("title")}
              </div>
            </div>
            <div className=" flex h-[30px] flex-row items-center gap-2">
              <button
                onClick={() => setTheme(theme === "light" ? "dark" : "light")}
                className="rounded-xl bg-[#00EDC2] p-2.5 dark:bg-black"
              >
                {theme === "dark" ? (
                  <PiMoon size={20} className="text-white opacity-100" />
                ) : (
                  <PiSun size={20} className="text-black opacity-70" />
                )}
              </button>
              <Collapse />
            </div>
          </div>
        </div>
      </main>
    </>
  );
}

export const getStaticProps: GetStaticProps = async (context) => {
  return {
    props: {
      // You can get the messages from anywhere you like. The recommended
      // pattern is to put them in JSON files separated by locale and read
      // the desired one based on the `locale` received from Next.js.
      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access
      messages: (await import(`@/locales/${context.locale}.json`)).default,
    },
  };
};
